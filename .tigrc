
# Color
color  diff-header       default magenta
color  diff-chunk        black   white

# Settings
set refresh-mode = auto
set main-view = id date author commit-title:graph=yes,refs=yes
set ignore-space = all
set vertical-split = no
set split-view-height = 80%

# Branch
bind main    b        !@git checkout -B "%(prompt Enter branch name: )" %(commit)
bind refs    b        !@git checkout -B "%(prompt Enter branch name: )" %(commit)
bind refs    B        !@git checkout -B %(branch) %(commit)

# Checkout
bind refs    c        !@git checkout %(branch)
bind main    c        !@git checkout %(commit)

# Commit
bind generic C        !git commit -v
bind status  C        !git commit -v
bind main    C        !git commit -v
bind refs    C        !git commit -v
bind generic +        !git commit --amend --allow-empty

# Move
bind generic <Ctrl-f> move-page-down
bind generic <Ctrl-b> move-page-up

bind generic g        move-first-line
bind generic G        move-last-line
bind main    G        move-last-line

# Fetch
bind main    F        !sh -c "branch=$(git remote show %(remote) | grep 'HEAD branch' | awk '{print $NF}'); git fetch %(remote) -p; git checkout -B $branch %(remote)/$branch"
bind refs    F        !git fetch %(remote) -p
bind refs    r        !git pull --ff-only --rebase %(remote) %(branch):%(branch)

# Push
bind generic <Esc>P   !git push -u %(remote) %(repo:head)
bind refs    <Esc>P   ?git push --force-with-lease -u %(remote) %(branch)
bind refs    p        !git push -u %(remote) %(branch)

# Merge
bind main    M        ?git merge %(commit)
bind refs    M        ?git merge %(commit)
bind refs    ;mm      ?git merge %(commit)
bind refs    ;mo      ?git merge -X ours %(commit)
bind refs    ;mt      ?git merge -X theirs %(commit)

# Delete
bind refs    d        ?@sh -c "git push --delete %(remote) %(branch) &"
bind refs    P        !git remote update --prune
bind refs    D        !@git branch -D %(branch)
bind stash   D        !@git stash drop %(stash)
bind tree    D        !git rm %(file)

## FIXME
bind refs    <Ctrl-d> !git tag -d %(tag)
bind status  x        ?git clean -d -f
bind status  D        !@rm %(file)

# Stash (Status, Stash)
bind generic Y        !git stash save
bind status  Y        !git stash push -m "%(prompt Enter name for stash: )" %(file)
bind stash   y        !git stash pop %(stash)
bind generic ;sa      !git reset --merge  # for conflict

# Reset
# bind status  H        ?git reset --hard HEAD
bind reflog  H        ?git reset %(commit)
bind main    H        ?git reset %(commit)

# History
bind blob    H        !tig %(file)
bind diff    H        !tig %(file)
bind tree    H        !tig %(file)
bind status  H        !tig %(file)

# main
bind main    I        !git rebase --autosquash -i %(commit)~
bind main    O        !git rebase --onto "%(prompt Rebase branch)" %(commit)~ %(repo:head)
bind main    R        !git revert --no-commit %(commit)
bind main    K        !git cherry-pick %(commit)
bind main    S        ?git reset --soft %(commit)

# status
bind status  R        ?git reset --hard HEAD

# refs
bind refs    v        !tig

# gh
bind generic ;gg      !>gh browse
bind generic ;gc      !>gh pr create --fill --web --assignee "@me"
bind generic ;gv      @>gh pr view --web
bind generic ;gl      !gh pr list

bind main    ;gb      @>gh browse %(commit)
bind refs    ;gb      @>gh browse --branch %(branch)
bind blob    ;gb      @>gh browse %(file)
bind diff    ;gb      @>gh browse %(file)
bind tree    ;gb      @>gh browse %(file)
bind status  ;gb      @>gh browse %(file)

# diff
bind generic ;dd      !>tig %(commit)..%(repo:head)
bind generic ;dr      !>tig %(repo:head)..%(commit)
bind generic ;d3      !>tig %(commit)...%(repo:head)
bind generic ;df      !>sh -c 'git diff "%(prompt Compare hash: )" %(file) | tig'

# merge
bind generic ;ma      !git merge --abort
bind generic ;mc      !git merge --continue

# rebase
bind generic ;ra      !git rebase --abort
bind generic ;rc      !git rebase --continue
bind generic ;rs      !git rebase --skip

# restore
bind blob    c        !git restore -s "%(prompt Restore hash: )" %(file)
bind tree    c        !git restore -s "%(prompt Restore hash: )" %(file)

# Others
bind generic f        !>sh -c "vi $(git ls-files | peco)"
bind generic e        !>vi %(file)
bind generic E        view-grep
bind generic <Ctrl-g> refresh
bind generic ;var     !+sh -c "echo remote=%(remote), repo:remote=%(repo:remote), repo:head=%(repo:head), file=%(file)"
bind generic <Esc>C   +bash -c "echo -n %(commit) | pbcopy; echo copied %(commit)"
bind generic ;vs      !>sh -c "VSCODE_CWD=$PWD open -n -b 'com.microsoft.VSCode' --args %(file)"
bind generic <Esc>d   !<sh -c "cd $(git ls-files | xargs -n 1 dirname | uniq | sort | peco); tig"
