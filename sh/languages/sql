
__mysql_dump_csv(){
    local table_name=$1; shift
     
}

# TOTO: insert用の形式で出力
sql (){
    # usage
    # setup user and database
    # $ sql -u USER DATABASE
    # setup table
    # $ sql t TABLE
    # insert data
    # $ sql in NUBER:VALUE[:s] ...

    # make "mysql -u USER DATABASE" typeless
    if [ -z "$__MYSQL_USER" -o -z "$__MYSQL_DATABASE" ]; then
        if [ $# -eq 3 ]; then
            shift;  # -u
            local us=$1; shift
            local db=$1; shift
            __MYSQL_USER=$us
            __MYSQL_DATABASE=$db
        else
            echo "__MYSQL_USER, __MYSQL_DATABASE are not defined"
            return 0
        fi
    else
        if [ "$1" = "-u" ]; then
            echo "__MYSQL_USER, __MYSQL_DATABASE are already defined"
            return 0
        fi
    fi

    local columns

    if [ "$1" = "t" ]; then
        if [ $# -eq 2 ]; then
            __MYSQL_TABLE=$2
            echo "change table to $__MYSQL_TABLE"
        else
            mysql -u $__MYSQL_USER $__MYSQL_DATABASE -Bse 'show tables'
        fi
    elif [ "$1" = "tc" ]; then
        mysql -u $__MYSQL_USER $__MYSQL_DATABASE -se "show create table $__MYSQL_TABLE" |perl -plE 's/\\n/\n/g'
    elif [ "$1" = "c" ]; then
         mysql -u $__MYSQL_USER $__MYSQL_DATABASE -Bse "show full columns from $__MYSQL_TABLE"
    elif [ "$1" = "s" ]; then
        mysql -u $__MYSQL_USER $__MYSQL_DATABASE -Bse "select * from $__MYSQL_TABLE"
    elif [ "$1" = "in" ]; then
        columns=`mysql -u $__MYSQL_USER $__MYSQL_DATABASE -Bs -e "show full columns from $__MYSQL_TABLE" | perl -anlE '$c++; END{say $c-1}'`
        columns=`perl -E '
                $num=shift;
                for(@ARGV){
                    @a=(split ":", $_); $b[$a[0]]=($a[2] eq "s" ? "''$a[1]''" : $a[1])
                };
                $b[$_]//="NULL" for 0..$num;
                say join ", ", @b' $columns $@`
        mysql -u $__MYSQL_USER $__MYSQL_DATABASE -e "insert into $__MYSQL_TABLE values($columns);"
    else
        mysql -u $__MYSQL_USER $__MYSQL_DATABASE $@
    fi
}
