_complie_and_run_in_c(){
    local main source tfile
    main=$1; shift;
    source="
$__C_INCLUDED_HEADERS
#include <limits.h>
#include <stdarg.h>

extern char **environ;

#define FOR(k,a,b) for(__typeof(a) k=(a); k < (b); k++)
#define REP(k,a) FOR(k,0,a)
#define o(s) printf(\"%s\", (char*)s);

void p(char *fmt, ...) {
    va_list list;
    va_start(list, fmt);
    vprintf(fmt, list);
    va_end(list);
}

int main(int argc, char* argv[]){
    $main
    return 0;
}"
    tfile=`mktemp`
    echo $source | clang -x c - -o $tfile && $tfile "$@"
    [ -f $tfile ] && \rm $tfile
}

cl (){
    if [ $# -eq 2 ]; then
        lopt=$1; shift;
        local root=~/github/sample/share
        clang -I. -I "$root/include" -L "$root/lib" -l $lopt  $1
        env LD_LIBRARY_PATH="$root/lib:$LD_LIBRARY_PATH" ./a.out
    else
   	    clang -I. $1 && ./a.out
    fi
}
