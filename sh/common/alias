HERE=$(dirname "$(readlink -f $0)")

# 文字列のエスケープ
# printf %q "I'm a man"  # I\'m\ a\ man%
# クゥオートのエスケープ'\''
# echo ''\'''  # '
# ruby -pe '$_.gsub!(/'\''/, %q('"'\\\\\\\\''"'))'


# linux don't have -r option
# alias tac="tail -r"
alias d="docker"
alias less="less -S"
alias wrap="rlwrap -pRed -a"
alias si="sh -i"
alias pgrep="ps aux | grep"
alias gosh="rlwrap -b '(){}[],#\";| ' gosh -l ~/lib/scheme/init.scm"
alias el="emacs -Q --script"
alias sshX="ssh -c blowfish -2 -C -Y"
alias cd=cdls
alias ll='ls -alF'
alias la='ls -A'
alias l='ls'
alias g="git"
#alias r='echo $?'
#alias rm="rm -i"
alias cp="cp -i"
alias mv="mv -i"
alias sl='ls -CF'
alias gd='dirs -v; echo -n "select number: "; read newdir; pushd +"$newdir"'
alias p="perl $PERL_OPTION -E"
alias pn="perl $PERL_OPTION -nalE"
alias pp="perl $PERL_OPTION -palE"
alias pp='perl -plE'
alias pn='perl -nlE'
alias f='fab -f ~/fabfile'
alias c="cdr"
alias sudo="sudo "  # sudo時にアリアス有効
alias tree="pwd;find . | sort | sed '1d;s/^\.//;s/\/\([^/]*\)$/|--\1/;s/\/[^/|]*/|  /g'"
alias clang++="clang++ -std=c++11"
# alias clg="clang `gauche-config -I` `gauche-config -L` `gauche-config -l`"
alias eo=__emacs_oneliner
#alias ee="emacsclient -e"
alias ea='emacsclient -nw -a ""'
alias en='emacsclient -n'
alias e='emacsclient -t'
# alias d='emacsclient -t .'
alias ..=".."
alias my=mysql_execute
# alias s=snippets
alias ce=_complie_and_run_in_c
alias cpe=_complie_and_run_in_cpp
alias grep='egrep -i'
alias hist='fc -l'
# alias go="rlwrap -b '(){}[],#\";| ' gosh -l ~/lib/scheme/init.scm"

goshe(){
    local main=$1; shift;
    gosh -l ~/lib/scheme/init.scm -e "(--> $main (if (not (undefined? it)) (print it)))" "$@" -Eexit
}

les(){
    if [ $# -eq 0 ]; then
        local file=/dev/stdin
    else
        local file=$1; shift;
    fi
    pygmentize -O style=monokai -f console256 -g "$file" | /usr/bin/less -R $@
}
alias c='pygmentize -O style=monokai -f console256 -g'


runjava() {
    javac $1.java
    java $1
}

ne() {
    local main=$1; shift;
    node -e "
function P(msg){console.log(msg)};
var _ = require('underscore');
var jsdom = require('jsdom');
var window = jsdom.jsdom().defaultView
var \$ = require('jquery')(window);
var JD = require('jquery-deferred');
$main
" $@
}

py() {
    local main=$1; shift;
    python -c "
from os.path import isdir, exists, join, basename
from os import environ, makedirs
from re import match, search, X, split
import re
import sys
import itertools
import functools
from sys import exit, argv
from shutil import copy, rmtree, move
from argparse import ArgumentParser
import time
def P(msg):
    print(msg)
$main
" $@
}

alias s="\gosh -l ~/lib/scheme/init.scm ~/github/onelinerForGauche/main.scm"

# -d オプションには、-d '{"key": "value", "number": int}'とkeyは"で囲むこと
alias curl_json='curl -H "Accept: application/json" -H "Content-type: application/json"'
# git_add_stream git@...
alias git_add_stream="git remote add upstream"
alias git_update="git checkout master; git fetch upstream; git merge upstream/master; git push"

run-erl () {; erlc $1; erl +B -s ${$1%%.*} main -s init stop}

. $HERE/utils.sh
. $HERE/docker.sh
. $HERE/oneliner.sh
. $HERE/heroku.sh
. $HERE/emacs.sh
. $HERE/perl.sh
. $HERE/python.sh
. $HERE/tmux.sh

